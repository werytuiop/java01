	1. 변수
	
		## 하나의 데이터를 저장할 수 있는 메모리 공간
		- 두 가지 의미가 있다.
			① 주소	② 주소의 참조값
		- 선언 -> 초기화 -> 할당
		
		== 변수 명명 규칙 ==
			- 키워드(예약어) 사용 불가능
			- 공백 허용되지 않음
			- 숫자로 시작할 수 없음
			- _, $ 이외의 특수문자 사용 불가능
			- 대소문자 구분 (Mysql,Oracle은 구분 안함)
			- 카멜 표기법
			- 한글은 사용하지 않기 (에러는 안나지만..)
		
		
	2. 상수
		
		## 변하지 않는 값
		┌ 리터럴 상수 : 그 값 자체
		└ final 상수 : 고정 데이터에 사용
		
		== 상수 명명 규칙 ==
			- 대문자로만
			- 여러 단어로 구성된 이름의 경우 단어 사이에 '_'를 써서 구분함
			- 변경 불가능
		
		
	3. 자바의 기본자료형(primitive types) (8가지)
	
		│ (byte)	│	1			2			4			8		│
		│	정수형	│ byte	 short	  int		  long	│
		│	실수형	│						 float	 double	│
		│	문자형	│			 char								│
		│	논리형	│boolean										│
			
			└ 1byte = 8bit (-2^7 ~ +2^7-1) (-128 ~ +127)
			
		↑			
		└ 기본타입 변수는 값을 직접 대입
		┌ 참조타입 변수는 객체의 주소값을 대입(new)
		↓			
			
	4. 자바의 참조형 (객체형타입 object)
	
		1) 배열
		2) String : 문자열 객체 "", new String("");
		3) class : 객체를 설계하기 위한 설계도, 틀, 사용자 정의 타입 (class의 구성원 = 멤버)
		4) interface : 클래스에 도움이 되기 위한
		
		- 객체형 타입은 new를 통해 변수에 넣어줘야함
		
		
	* 같은 자료형끼리의 연산 결과는 같은 자료형

		- int×int = int
		- double×double = double
		- int×double = double (double형이 더 크므로 자동 형변환 = auto casting)
	
			
	* 타입 변환과 자동 타입 변환
	
		- 타입 변환: 한 타입의 값을 다른 타입의 값으로 변환
		- 자동 타입 변환: 컴파일러에 의해 원래의 타입보다 큰 타입으로 자동 변환
							치환문(=)이나 수식 내에서 타입이 일치하지 않을 때		
		
		
		
		
			
			
			
			